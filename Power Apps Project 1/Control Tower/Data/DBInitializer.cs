using Control_Tower.Models;
using Microsoft.EntityFrameworkCore;

namespace Control_Tower.Data
{
    public class DBInitializer
    {
        public static void Initialize(IServiceProvider serviceProvider)
        {
            using (var context = new CTContext(serviceProvider.GetRequiredService<DbContextOptions<CTContext>>()))
            {
                context.Database.EnsureCreated();

                if (!context.Flights.Any())
                {
                    var flights = new Flight[]
                    {
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/4/2020, 7:52 AM"), ArrivalDateTime = Convert.ToDateTime("7/4/2020, 7:52 PM"), DepartureAirport = "Bang Ban", ArrivalAirport = "Ngori", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/5/2020, 5:05 AM"), ArrivalDateTime = Convert.ToDateTime("1/5/2020, 16:53"), DepartureAirport = "Belfast", ArrivalAirport = "Kraslice", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/28/2022, 3:37 PM"), ArrivalDateTime = Convert.ToDateTime("11/29/2022, 7:52 AM"), DepartureAirport = "Rennes", ArrivalAirport = "Altenberg bei Linz", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/15/2022, 12:53 PM"), ArrivalDateTime = Convert.ToDateTime("5/16/2022, 7:52 AM"), DepartureAirport = "Wilkołaz", ArrivalAirport = "Kakata", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/16/2023, 8:09 PM"), ArrivalDateTime = Convert.ToDateTime("1/16/2023, 18:45"), DepartureAirport = "Czeremcha", ArrivalAirport = "Xinxu", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/29/2020, 8:17 PM"), ArrivalDateTime = Convert.ToDateTime("1/30/2020, 08:49"), DepartureAirport = "Gyeongsan-si", ArrivalAirport = "Hamm", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/28/2024, 1:35 AM"), ArrivalDateTime = Convert.ToDateTime("6/28/2024, 7:52 AM"), DepartureAirport = "Antimácheia", ArrivalAirport = "Trelew", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("10/2/2023, 11:14 PM"), ArrivalDateTime = Convert.ToDateTime("10/2/2023, 10:41"), DepartureAirport = "Memphis", ArrivalAirport = "Lunen", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("4/20/2021, 3:56 AM"), ArrivalDateTime = Convert.ToDateTime("4/20/2021, 7:52 AM"), DepartureAirport = "Macau", ArrivalAirport = "Gayam", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/5/2024, 1:53 PM"), ArrivalDateTime = Convert.ToDateTime("8/5/2024, 08:39"), DepartureAirport = "Shibli", ArrivalAirport = "Kakuda", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("10/28/2024, 8:38 PM"), ArrivalDateTime = Convert.ToDateTime("10/29/2024, 7:52 AM"), DepartureAirport = "San Francisco", ArrivalAirport = "Honghua’erji", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/2/2021, 2:19 AM"), ArrivalDateTime = Convert.ToDateTime("12/2/2021, 7:52 AM"), DepartureAirport = "Bom Jesus da Lapa", ArrivalAirport = "Shuidun", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/5/2022, 11:39 AM"), ArrivalDateTime = Convert.ToDateTime("5/5/2022, 19:00"), DepartureAirport = "Salamanca", ArrivalAirport = "Tayang", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("9/29/2020, 4:23 AM"), ArrivalDateTime = Convert.ToDateTime("9/29/2020, 7:52 AM"), DepartureAirport = "Petrovskoye", ArrivalAirport = "Loma Bonita", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/15/2021, 11:29 PM"), ArrivalDateTime = Convert.ToDateTime("6/16/2021, 01:17"), DepartureAirport = "Messina", ArrivalAirport = "Encontrados", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/3/2023, 9:55 PM"), ArrivalDateTime = Convert.ToDateTime("11/4/2023, 7:52 AM"), DepartureAirport = "Sudikampir", ArrivalAirport = "Ouangani", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/2/2023, 5:18 AM"), ArrivalDateTime = Convert.ToDateTime("6/2/2023, 7:52 AM"), DepartureAirport = "El Zulia", ArrivalAirport = "Konin", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/16/2023, 8:28 AM"), ArrivalDateTime = Convert.ToDateTime("6/16/2023, 7:52 PM"), DepartureAirport = "Kansas City", ArrivalAirport = "Sirnasari", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/10/2021, 1:45 PM"), ArrivalDateTime = Convert.ToDateTime("6/11/2021, 02:22"), DepartureAirport = "Mosquée", ArrivalAirport = "Mekarsari", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/8/2020, 11:38 AM"), ArrivalDateTime = Convert.ToDateTime("8/8/2020, 7:52 PM"), DepartureAirport = "Loučovice", ArrivalAirport = "Bual", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("4/7/2021, 11:52 AM"), ArrivalDateTime = Convert.ToDateTime("4/7/2021, 7:52 PM"), DepartureAirport = "Joutsa", ArrivalAirport = "Khandagayty", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/28/2024, 1:09 AM"), ArrivalDateTime = Convert.ToDateTime("7/28/2024, 7:52 AM"), DepartureAirport = "Portet-sur-Garonne", ArrivalAirport = "Chavarría", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/31/2020, 7:29 AM"), ArrivalDateTime = Convert.ToDateTime("1/31/2020, 7:52 AM"), DepartureAirport = "Cimaung Kidul", ArrivalAirport = "Thanh Ba", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/8/2023, 11:31 AM"), ArrivalDateTime = Convert.ToDateTime("11/8/2023, 15:05"), DepartureAirport = "Oslo", ArrivalAirport = "Fort-de-France", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/11/2021, 9:16 AM"), ArrivalDateTime = Convert.ToDateTime("5/11/2021, 07:33"), DepartureAirport = "Sohag", ArrivalAirport = "Warudoyong", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/31/2023, 2:22 AM"), ArrivalDateTime = Convert.ToDateTime("1/31/2023, 13:51"), DepartureAirport = "Tampa", ArrivalAirport = "Thị Trấn Mỹ Lộc", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/29/2021, 9:00 AM"), ArrivalDateTime = Convert.ToDateTime("5/29/2021, 7:52 PM"), DepartureAirport = "Kotaagung", ArrivalAirport = "Oslo", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/7/2021, 11:37 PM"), ArrivalDateTime = Convert.ToDateTime("8/7/2021, 21:36"), DepartureAirport = "Isiro", ArrivalAirport = "Gunungkencana", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/18/2022, 2:31 AM"), ArrivalDateTime = Convert.ToDateTime("12/18/2022, 7:52 PM"), DepartureAirport = "Maragogipe", ArrivalAirport = "Pasirsongket Dua", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/29/2022, 1:49 PM"), ArrivalDateTime = Convert.ToDateTime("12/30/2022, 7:52 AM"), DepartureAirport = "Извор", ArrivalAirport = "Nyima", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/30/2021, 2:04 AM"), ArrivalDateTime = Convert.ToDateTime("7/30/2021, 7:52 AM"), DepartureAirport = "Muzambinho", ArrivalAirport = "Lunsar", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/8/2024, 9:44 AM"), ArrivalDateTime = Convert.ToDateTime("7/8/2024, 16:40"), DepartureAirport = "Xinshi", ArrivalAirport = "Sandefjord", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("4/12/2021, 11:47 PM"), ArrivalDateTime = Convert.ToDateTime("4/13/2021, 7:52 AM"), DepartureAirport = "Novais", ArrivalAirport = "Asyūţ", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/22/2020, 2:40 AM"), ArrivalDateTime = Convert.ToDateTime("11/22/2020, 7:52 AM"), DepartureAirport = "Balong Wetan", ArrivalAirport = "Galatás", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("2/10/2024, 8:12 AM"), ArrivalDateTime = Convert.ToDateTime("2/10/2024, 7:52 PM"), DepartureAirport = "Dongcheng", ArrivalAirport = "Albertville", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/25/2020, 7:48 AM"), ArrivalDateTime = Convert.ToDateTime("7/25/2020, 17:54"), DepartureAirport = "Villa Paula de Sarmiento", ArrivalAirport = "Castêlo", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/8/2021, 11:16 PM"), ArrivalDateTime = Convert.ToDateTime("1/9/2021, 01:55"), DepartureAirport = "Coaticook", ArrivalAirport = "Mahalapye", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/12/2023, 3:55 AM"), ArrivalDateTime = Convert.ToDateTime("8/12/2023, 13:57"), DepartureAirport = "Jixi", ArrivalAirport = "Orito", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/10/2024, 1:40 PM"), ArrivalDateTime = Convert.ToDateTime("1/10/2024, 22:07"), DepartureAirport = "Looc", ArrivalAirport = "Saint Lucia", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("2/22/2020, 5:06 AM"), ArrivalDateTime = Convert.ToDateTime("2/22/2020, 8:52 AM"), DepartureAirport = "Cao Thượng", ArrivalAirport = "Puerto Colombia", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/14/2024, 9:14 PM"), ArrivalDateTime = Convert.ToDateTime("1/15/2024, 3:52 AM"), DepartureAirport = "Ronda", ArrivalAirport = "Mekarsari", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/5/2022, 5:11 PM"), ArrivalDateTime = Convert.ToDateTime("1/5/2022, 7:52 PM"), DepartureAirport = "Матејче", ArrivalAirport = "Bayside", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("9/3/2020, 9:30 AM"), ArrivalDateTime = Convert.ToDateTime("9/3/2020, 19:20"), DepartureAirport = "Xique Xique", ArrivalAirport = "Tía Juana", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/4/2023, 10:39 AM"), ArrivalDateTime = Convert.ToDateTime("11/4/2023, 11:52 AM"), DepartureAirport = "Quanling", ArrivalAirport = "Sernovodsk", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/13/2022, 6:06 AM"), ArrivalDateTime = Convert.ToDateTime("8/13/2022, 7:24 AM"), DepartureAirport = "Karkkila", ArrivalAirport = "Dolna Banya", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/23/2022, 10:01 AM"), ArrivalDateTime = Convert.ToDateTime("8/23/2022, 7:27 PM"), DepartureAirport = "Haiyang", ArrivalAirport = "Uralets", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/22/2022, 5:28 PM"), ArrivalDateTime = Convert.ToDateTime("5/22/2022, 22:22"), DepartureAirport = "Taiyuan", ArrivalAirport = "Cherryville", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/17/2022, 3:17 PM"), ArrivalDateTime = Convert.ToDateTime("7/17/2022, 7:52 PM"), DepartureAirport = "Thoeng", ArrivalAirport = "Pingling", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("3/6/2023, 11:35 AM"), ArrivalDateTime = Convert.ToDateTime("3/6/2023, 3:52 PM"), DepartureAirport = "Pavlovka", ArrivalAirport = "Lumphăt", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/5/2020, 9:33 AM"), ArrivalDateTime = Convert.ToDateTime("11/5/2020, 14:07"), DepartureAirport = "Pochinki", ArrivalAirport = "Biaokou", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/7/2024, 7:59 PM"), ArrivalDateTime = Convert.ToDateTime("6/8/2024, 06:24"), DepartureAirport = "Gimcheon", ArrivalAirport = "Hanji", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("9/9/2021, 4:36 AM"), ArrivalDateTime = Convert.ToDateTime("9/9/2021, 7:30 AM"), DepartureAirport = "Barayong", ArrivalAirport = "Sauce", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/29/2022, 1:38 AM"), ArrivalDateTime = Convert.ToDateTime("5/29/2022, 7:20 AM"), DepartureAirport = "Esch-sur-Alzette", ArrivalAirport = "Carpentras", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/9/2022, 7:21 PM"), ArrivalDateTime = Convert.ToDateTime("7/9/2022, 7:54 PM"), DepartureAirport = "Mingcheng", ArrivalAirport = "Dolsk", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("9/17/2020, 1:57 PM"), ArrivalDateTime = Convert.ToDateTime("9/17/2020, 20:17"), DepartureAirport = "Tangkanpulit", ArrivalAirport = "Palu", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/10/2023, 3:33 AM"), ArrivalDateTime = Convert.ToDateTime("8/10/2023, 7:32 AM"), DepartureAirport = "Kaseda-shirakame", ArrivalAirport = "Podosinovets", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/24/2023, 8:12 PM"), ArrivalDateTime = Convert.ToDateTime("7/24/2023, 9:51 PM"), DepartureAirport = "Valdemārpils", ArrivalAirport = "Changning", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/22/2022, 7:10 PM"), ArrivalDateTime = Convert.ToDateTime("7/23/2022, 00:53"), DepartureAirport = "Uberlândia", ArrivalAirport = "Cayambe", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/25/2021, 5:38 AM"), ArrivalDateTime = Convert.ToDateTime("12/25/2021, 8:52 AM"), DepartureAirport = "Mitrópoli", ArrivalAirport = "Akhtopol", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/25/2020, 6:47 AM"), ArrivalDateTime = Convert.ToDateTime("7/25/2020, 9:52 AM"), DepartureAirport = "Skopin", ArrivalAirport = "Dudchany", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/24/2020, 11:25 AM"), ArrivalDateTime = Convert.ToDateTime("1/24/2020, 7:52 PM"), DepartureAirport = "Lunéville", ArrivalAirport = "Blobo", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("9/6/2024, 3:28 PM"), ArrivalDateTime = Convert.ToDateTime("9/6/2024, 7:52 PM"), DepartureAirport = "Kalmar", ArrivalAirport = "Peterhof", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/5/2022, 2:07 PM"), ArrivalDateTime = Convert.ToDateTime("12/5/2022, 5:52 PM"), DepartureAirport = "Chambishi", ArrivalAirport = "Hetai", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("10/7/2020, 4:45 AM"), ArrivalDateTime = Convert.ToDateTime("10/7/2020, 10:42 AM"), DepartureAirport = "Guardizela", ArrivalAirport = "Vaudreuil-Dorion", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/23/2023, 10:11 AM"), ArrivalDateTime = Convert.ToDateTime("11/23/2023, 13:07"), DepartureAirport = "Banjar Parekan", ArrivalAirport = "Panchagarh", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("10/16/2021, 8:53 AM"), ArrivalDateTime = Convert.ToDateTime("10/16/2021, 18:19"), DepartureAirport = "Kotovsk", ArrivalAirport = "Јегуновце", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/21/2024, 11:00 AM"), ArrivalDateTime = Convert.ToDateTime("12/21/2024, 9:00 PM"), DepartureAirport = "Tsurugi-asahimachi", ArrivalAirport = "Álli Meriá", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/29/2022, 4:55 PM"), ArrivalDateTime = Convert.ToDateTime("7/29/2022, 5:14 PM"), DepartureAirport = "Chicago", ArrivalAirport = "Amieira do Tejo", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("4/19/2024, 2:40 AM"), ArrivalDateTime = Convert.ToDateTime("4/19/2024, 7:25 AM"), DepartureAirport = "Krajan Joho", ArrivalAirport = "Socorro", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/10/2024, 5:11 AM"), ArrivalDateTime = Convert.ToDateTime("7/10/2024, 6:32 AM"), DepartureAirport = "Xianglong", ArrivalAirport = "Tungi", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("2/2/2022, 4:04 AM"), ArrivalDateTime = Convert.ToDateTime("2/2/2022, 1:10 PM"), DepartureAirport = "Klenovyy", ArrivalAirport = "Sumberejo", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("4/21/2023, 7:32 AM"), ArrivalDateTime = Convert.ToDateTime("4/21/2023, 4:34 PM"), DepartureAirport = "Imaichi", ArrivalAirport = "Gandorhun", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("10/13/2023, 10:18 PM"), ArrivalDateTime = Convert.ToDateTime("10/13/2023, 10:35 PM"), DepartureAirport = "Čáslav", ArrivalAirport = "San Jose", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/5/2021, 2:41 AM"), ArrivalDateTime = Convert.ToDateTime("12/5/2021, 8:51 AM"), DepartureAirport = "Sumanding", ArrivalAirport = "Tamandaré", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/7/2020, 11:18 AM"), ArrivalDateTime = Convert.ToDateTime("11/7/2020, 19:00"), DepartureAirport = "Erandique", ArrivalAirport = "Junín", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("11/24/2022, 3:31 PM"), ArrivalDateTime = Convert.ToDateTime("11/25/2022, 04:02"), DepartureAirport = "Dzięgielów", ArrivalAirport = "Aikmel", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("9/17/2023, 6:00 AM"), ArrivalDateTime = Convert.ToDateTime("9/17/2023, 7:55 AM"), DepartureAirport = "Las Matas de Farfán", ArrivalAirport = "Elefsína", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("7/15/2024, 9:16 AM"), ArrivalDateTime = Convert.ToDateTime("7/15/2024, 07:20"), DepartureAirport = "St. Anton an der Jeßnitz", ArrivalAirport = "Buesaco", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/27/2023, 4:22 AM"), ArrivalDateTime = Convert.ToDateTime("5/27/2023, 13:08"), DepartureAirport = "Herálec", ArrivalAirport = "Spandaryan", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/21/2024, 11:01 AM"), ArrivalDateTime = Convert.ToDateTime("1/21/2024, 7:52 PM"), DepartureAirport = "Issoudun", ArrivalAirport = "Yuanqiao", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("2/23/2023, 8:10 PM"), ArrivalDateTime = Convert.ToDateTime("2/24/2023, 03:46"), DepartureAirport = "Urzhar", ArrivalAirport = "Stamáta", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/17/2023, 10:38 AM"), ArrivalDateTime = Convert.ToDateTime("8/17/2023, 8:42 PM"), DepartureAirport = "Tanjungbatu", ArrivalAirport = "Meïganga", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("2/19/2021, 10:06 AM"), ArrivalDateTime = Convert.ToDateTime("2/19/2021, 13:19"), DepartureAirport = "Ранковце", ArrivalAirport = "Dongchong", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("4/29/2020, 8:05 AM"), ArrivalDateTime = Convert.ToDateTime("4/29/2020, 18:19"), DepartureAirport = "Higuerote", ArrivalAirport = "Paris 12", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("10/28/2020, 11:33 AM"), ArrivalDateTime = Convert.ToDateTime("10/28/2020, 8:22 PM"), DepartureAirport = "San Miguel de Tucumán", ArrivalAirport = "Phumĭ Véal Srê", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("3/31/2021, 4:55 AM"), ArrivalDateTime = Convert.ToDateTime("3/31/2021, 7:12 AM"), DepartureAirport = "Chirilagua", ArrivalAirport = "Kafr Şūr", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/5/2020, 1:14 AM"), ArrivalDateTime = Convert.ToDateTime("12/5/2020, 7:40 AM"), DepartureAirport = "Lututów", ArrivalAirport = "Huayang", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("3/18/2022, 6:49 AM"), ArrivalDateTime = Convert.ToDateTime("3/18/2022, 14:06"), DepartureAirport = "Pelópion", ArrivalAirport = "Xianning", PassengerLimit = 300 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/21/2024, 8:56 PM"), ArrivalDateTime = Convert.ToDateTime("12/21/2024, 21:37"), DepartureAirport = "Bhalil", ArrivalAirport = "Worcester", PassengerLimit = 320 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/29/2023, 7:15 PM"), ArrivalDateTime = Convert.ToDateTime("6/29/2023, 00:36"), DepartureAirport = "Värnamo", ArrivalAirport = "Cikarang", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/9/2022, 5:39 AM"), ArrivalDateTime = Convert.ToDateTime("5/9/2022, 14:59"), DepartureAirport = "Piggotts", ArrivalAirport = "Dongzhang", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("6/22/2020, 2:22 AM"), ArrivalDateTime = Convert.ToDateTime("6/22/2020, 3:52 AM"), DepartureAirport = "Deir Ḥannā", ArrivalAirport = "Termas de Río Hondo", PassengerLimit = 340 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("5/25/2021, 1:03 AM"), ArrivalDateTime = Convert.ToDateTime("5/25/2021, 10:04"), DepartureAirport = "Zoumachang", ArrivalAirport = "Sangmu", PassengerLimit = 360 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("2/26/2024, 2:58 AM"), ArrivalDateTime = Convert.ToDateTime("2/26/2024, 7:30 PM"), DepartureAirport = "Potlot", ArrivalAirport = "Nangkapayung", PassengerLimit = 280 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("1/26/2023, 10:37 AM"), ArrivalDateTime = Convert.ToDateTime("1/26/2023, 7:52 PM"), DepartureAirport = "Ardazubre", ArrivalAirport = "Odintsovo", PassengerLimit = 240 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("3/30/2023, 6:45 AM"), ArrivalDateTime = Convert.ToDateTime("3/30/2023, 8:23 AM"), DepartureAirport = "Valvedditturai", ArrivalAirport = "Dongshangguan", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("10/1/2024, 3:25 PM"), ArrivalDateTime = Convert.ToDateTime("10/2/2024, 7:55"), DepartureAirport = "São Roque", ArrivalAirport = "Chlumec nad Cidlinou", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("8/5/2022, 9:44 PM"), ArrivalDateTime = Convert.ToDateTime("8/6/2022, 00:12"), DepartureAirport = "Sukpak", ArrivalAirport = "Čakovec", PassengerLimit = 220 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("9/9/2024, 3:42 PM"), ArrivalDateTime = Convert.ToDateTime("9/9/2024, 6:52 PM"), DepartureAirport = "Manchester", ArrivalAirport = "Nantes", PassengerLimit = 260 },
                        new Flight { DepartureDateTime = Convert.ToDateTime("12/23/2022, 9:40 PM"), ArrivalDateTime = Convert.ToDateTime("12/23/2022, 22:57"), DepartureAirport = "Ia Kha", ArrivalAirport = "San Nicolas", PassengerLimit = 340 }
                    };
                    context.Flights.AddRange(flights);
                    context.SaveChanges();
                }

                if (!context.Passengers.Any())
                {
                    var passengers = new Passenger[]
                    {
                        new Passenger{ Name = "Fritz Atkins", Job = "Customer Service", Email = "arcu.sed@yahoo.org", Age = 77 },
                        new Passenger{ Name = "Carla Rivers", Job = "Sales and Marketing", Email = "quis.diam@outlook.ca", Age = 41 },
                        new Passenger{ Name = "Simone Moss", Job = "Quality Assurance", Email = "ornare.egestas@google.org", Age = 73 },
                        new Passenger{ Name = "Barrett Stout", Job = "", Email = "velit.in@yahoo.net", Age = 16 },
                        new Passenger{ Name = "Beau Lyons", Job = "", Email = "molestie@icloud.com", Age = 88 },
                        new Passenger{ Name = "Nyssa Dalton", Job = "Human Resources", Email = "est.mollis@yahoo.ca", Age = 55 },
                        new Passenger{ Name = "Stephanie Wise", Job = "", Email = "parturient.montes@yahoo.org", Age = 80 },
                        new Passenger{ Name = "Jaden Nguyen", Job = "Accounting", Email = "senectus.et@google.edu", Age = 47 },
                        new Passenger{ Name = "Darius York", Job = "Sales and Marketing", Email = "est.mauris@aol.net", Age = 85 },
                        new Passenger{ Name = "Claudia Dawson", Job = "Accounting", Email = "risus.nunc@outlook.couk", Age = 23 },
                        new Passenger{ Name = "Dawn Alexander", Job = "Customer Relations", Email = "curabitur.ut.odio@hotmail.couk", Age = 49 },
                        new Passenger{ Name = "Avye Randall", Job = "Advertising", Email = "eget.volutpat@hotmail.com", Age = 64 },
                        new Passenger{ Name = "Ray Hull", Job = "Asset Management", Email = "curabitur.vel@icloud.com", Age = 35 },
                        new Passenger{ Name = "Nash Salinas", Job = "Human Resources", Email = "aenean@yahoo.ca", Age = 78 },
                        new Passenger{ Name = "Galvin Sharp", Job = "Tech Support", Email = "natoque.penatibus@google.couk", Age = 50 },
                        new Passenger{ Name = "Cheryl Wade", Job = "Customer Service", Email = "arcu@outlook.com", Age = 27 },
                        new Passenger{ Name = "Beatrice Sharp", Job = "Research and Development", Email = "cursus@outlook.org", Age = 33 },
                        new Passenger{ Name = "Nita Manning", Job = "Customer Service", Email = "non.dui@google.net", Age = 27 },
                        new Passenger{ Name = "Ashton Schultz", Job = "Payroll", Email = "proin@aol.net", Age = 58 },
                        new Passenger{ Name = "Adrian Decker", Job = "Quality Assurance", Email = "a.sollicitudin.orci@icloud.ca", Age = 90 },
                        new Passenger{ Name = "Ariana Trevino", Job = "Public Relations", Email = "consectetuer.adipiscing@yahoo.edu", Age = 39 },
                        new Passenger{ Name = "Kelly Franklin", Job = "Legal Department", Email = "parturient@protonmail.org", Age = 36 },
                        new Passenger{ Name = "Rooney House", Job = "Sales and Marketing", Email = "orci.luctus.et@outlook.edu", Age = 79 },
                        new Passenger{ Name = "Mira Lynch", Job = "Customer Service", Email = "ante.iaculis@google.net", Age = 51 },
                        new Passenger{ Name = "Christian Nunez", Job = "Finances", Email = "vulputate.posuere@icloud.net", Age = 28 },
                        new Passenger{ Name = "Stone Harrison", Job = "Legal Department", Email = "donec.consectetuer.mauris@yahoo.org", Age = 81 },
                        new Passenger{ Name = "Hilel Farrell", Job = "Finances", Email = "urna.ut@outlook.couk", Age = 32 },
                        new Passenger{ Name = "Igor Moore", Job = "Sales and Marketing", Email = "eleifend.nunc@outlook.ca", Age = 77 },
                        new Passenger{ Name = "Astra Mcclure", Job = "Quality Assurance", Email = "lectus.ante@hotmail.org", Age = 38 },
                        new Passenger{ Name = "Chase Graves", Job = "Public Relations", Email = "eros.turpis@yahoo.edu", Age = 65 },
                        new Passenger{ Name = "Keith Malone", Job = "Customer Relations", Email = "sed@icloud.edu", Age = 60 },
                        new Passenger{ Name = "Libby Pacheco", Job = "Payroll", Email = "ullamcorper.viverra.maecenas@aol.edu", Age = 66 },
                        new Passenger{ Name = "Derek Morrison", Job = "Advertising", Email = "lorem@outlook.com", Age = 13 },
                        new Passenger{ Name = "Randall Tillman", Job = "Legal Department", Email = "sit.amet@icloud.org", Age = 46 },
                        new Passenger{ Name = "Ray Cook", Job = "Public Relations", Email = "integer.sem@protonmail.couk", Age = 44 },
                        new Passenger{ Name = "Alden Lawson", Job = "Accounting", Email = "elementum.at@aol.couk", Age = 67 },
                        new Passenger{ Name = "Yvonne Yang", Job = "", Email = "dui.nec@icloud.ca", Age = 8 },
                        new Passenger{ Name = "Hyatt Hopkins", Job = "Quality Assurance", Email = "nunc.sollicitudin@aol.net", Age = 73 },
                        new Passenger{ Name = "Brett King", Job = "Customer Service", Email = "sed.sem.egestas@yahoo.net", Age = 47 },
                        new Passenger{ Name = "Tanner Slater", Job = "Tech Support", Email = "etiam.laoreet@yahoo.ca", Age = 33 },
                        new Passenger{ Name = "Vernon Huffman", Job = "Media Relations", Email = "cursus.non@protonmail.org", Age = 46 },
                        new Passenger{ Name = "Pearl Rose", Job = "Legal Department", Email = "vitae@google.ca", Age = 26 },
                        new Passenger{ Name = "Eric Wade", Job = "Asset Management", Email = "scelerisque@hotmail.ca", Age = 32 },
                        new Passenger{ Name = "Lars Collins", Job = "Accounting", Email = "non@hotmail.ca", Age = 77 },
                        new Passenger{ Name = "Xavier Mccormick", Job = "Quality Assurance", Email = "adipiscing@hotmail.couk", Age = 27 },
                        new Passenger{ Name = "Ian Craig", Job = "Quality Assurance", Email = "feugiat.nec.diam@protonmail.org", Age = 18 },
                        new Passenger{ Name = "Ivor Petersen", Job = "Public Relations", Email = "lorem.lorem.luctus@protonmail.edu", Age = 33 },
                        new Passenger{ Name = "Florence Cunningham", Job = "Accounting", Email = "semper.et@protonmail.org", Age = 67 },
                        new Passenger{ Name = "Nina Dominguez", Job = "Sales and Marketing", Email = "vivamus.sit@hotmail.org", Age = 88 },
                        new Passenger{ Name = "Melyssa Pennington", Job = "Accounting", Email = "dui.augue@yahoo.edu", Age = 72 },
                        new Passenger{ Name = "Dylan Cherry", Job = "Legal Department", Email = "at.velit@hotmail.org", Age = 28 },
                        new Passenger{ Name = "Giselle Lawson", Job = "Customer Service", Email = "magna.praesent@yahoo.org", Age = 60 },
                        new Passenger{ Name = "Ila Whitney", Job = "Public Relations", Email = "sed.nulla.ante@hotmail.ca", Age = 50 },
                        new Passenger{ Name = "Ahmed Ingram", Job = "Customer Relations", Email = "vestibulum.accumsan@outlook.net", Age = 49 },
                        new Passenger{ Name = "Wyatt Carpenter", Job = "Legal Department", Email = "ultrices.iaculis@yahoo.edu", Age = 82 },
                        new Passenger{ Name = "Laura Tyler", Job = "Public Relations", Email = "fringilla@outlook.org", Age = 56 },
                        new Passenger{ Name = "Ryan Gordon", Job = "Asset Management", Email = "varius.ultrices.mauris@aol.ca", Age = 37 },
                        new Passenger{ Name = "Inga Gay", Job = "Public Relations", Email = "arcu.iaculis@protonmail.org", Age = 68 },
                        new Passenger{ Name = "Denton Schneider", Job = "Asset Management", Email = "vitae.risus.duis@protonmail.com", Age = 54 },
                        new Passenger{ Name = "Brenden Malone", Job = "Media Relations", Email = "morbi.neque@outlook.couk", Age = 87 },
                        new Passenger{ Name = "Tara Deleon", Job = "Sales and Marketing", Email = "non.lorem@yahoo.couk", Age = 50 },
                        new Passenger{ Name = "Silas Bernard", Job = "Media Relations", Email = "urna@aol.ca", Age = 89 },
                        new Passenger{ Name = "Keiko Molina", Job = "Public Relations", Email = "donec.vitae@google.ca", Age = 88 },
                        new Passenger{ Name = "Tasha Mccoy", Job = "Finances", Email = "dignissim.tempor@protonmail.edu", Age = 28 },
                        new Passenger{ Name = "Rebecca Solomon", Job = "Sales and Marketing", Email = "est.ac@protonmail.org", Age = 31 },
                        new Passenger{ Name = "Daryl Woodard", Job = "Tech Support", Email = "netus@outlook.net", Age = 85 },
                        new Passenger{ Name = "Francis Weeks", Job = "Finances", Email = "donec@yahoo.net", Age = 84 },
                        new Passenger{ Name = "Yuli Wong", Job = "", Email = "dolor.fusce@protonmail.net", Age = 15 },
                        new Passenger{ Name = "Shannon Banks", Job = "Sales and Marketing", Email = "lectus@yahoo.net", Age = 40 },
                        new Passenger{ Name = "Clio West", Job = "Customer Service", Email = "tristique.neque.venenatis@hotmail.edu", Age = 44 },
                        new Passenger{ Name = "Jessica Love", Job = "Tech Support", Email = "donec.consectetuer@icloud.ca", Age = 73 },
                        new Passenger{ Name = "Chase Henry", Job = "", Email = "libero@icloud.edu", Age = 87 },
                        new Passenger{ Name = "Xavier Henson", Job = "Accounting", Email = "gravida@aol.net", Age = 26 },
                        new Passenger{ Name = "Joan Salazar", Job = "Asset Management", Email = "a.malesuada@protonmail.couk", Age = 11 },
                        new Passenger{ Name = "Brock Mcintyre", Job = "Asset Management", Email = "ac.ipsum@outlook.couk", Age = 21 },
                        new Passenger{ Name = "Ashton Medina", Job = "Sales and Marketing", Email = "sociis@google.ca", Age = 79 },
                        new Passenger{ Name = "Xandra Hernandez", Job = "Human Resources", Email = "tristique.neque@yahoo.couk", Age = 59 },
                        new Passenger{ Name = "Breanna West", Job = "Finances", Email = "risus.morbi@aol.com", Age = 59 },
                        new Passenger{ Name = "Geoffrey Ray", Job = "Research and Development", Email = "in.ornare.sagittis@aol.couk", Age = 50 },
                        new Passenger{ Name = "Gary Atkinson", Job = "Media Relations", Email = "vitae.risus.duis@yahoo.edu", Age = 71 },
                        new Passenger{ Name = "Eaton Frye", Job = "", Email = "class.aptent@icloud.net", Age = 12 },
                        new Passenger{ Name = "Xaviera Tanner", Job = "Customer Service", Email = "mauris.id@protonmail.org", Age = 30 },
                        new Passenger{ Name = "Piper Norman", Job = "Quality Assurance", Email = "vulputate.dui@aol.org", Age = 86 },
                        new Passenger{ Name = "Jocelyn Tran", Job = "Quality Assurance", Email = "mauris.sagittis@icloud.net", Age = 57 },
                        new Passenger{ Name = "Hop Keith", Job = "Human Resources", Email = "pede@hotmail.org", Age = 36 },
                        new Passenger{ Name = "Amanda Yates", Job = "Tech Support", Email = "diam.luctus@aol.com", Age = 85 },
                        new Passenger{ Name = "Chelsea Hardy", Job = "Media Relations", Email = "malesuada.integer.id@hotmail.net", Age = 47 },
                        new Passenger{ Name = "Yoshio Michael", Job = "Public Relations", Email = "orci.ut.sagittis@aol.org", Age = 74 },
                        new Passenger{ Name = "Tarik Waters", Job = "Customer Service", Email = "nonummy.ut@aol.com", Age = 65 },
                        new Passenger{ Name = "Quynn Cherry", Job = "Asset Management", Email = "sapien@icloud.org", Age = 26 },
                        new Passenger{ Name = "Ifeoma Colon", Job = "", Email = "est.vitae@icloud.couk", Age = 12 },
                        new Passenger{ Name = "Tashya Hayden", Job = "", Email = "pellentesque@hotmail.couk", Age = 16 },
                        new Passenger{ Name = "Wyoming Klein", Job = "Asset Management", Email = "augue.id.ante@google.org", Age = 62 },
                        new Passenger{ Name = "Ocean Lawrence", Job = "Media Relations", Email = "ullamcorper.duis.at@aol.ca", Age = 18 },
                        new Passenger{ Name = "Ginger Butler", Job = "", Email = "porttitor.interdum.sed@yahoo.com", Age = 13 },
                        new Passenger{ Name = "Quinn Kane", Job = "Sales and Marketing", Email = "egestas.aliquam@aol.com", Age = 57 },
                        new Passenger{ Name = "Leah Browning", Job = "Media Relations", Email = "ridiculus.mus@google.net", Age = 67 },
                        new Passenger{ Name = "Keane Banks", Job = "Research and Development", Email = "pellentesque.ultricies@google.org", Age = 85 },
                        new Passenger{ Name = "Vivien Albert", Job = "Human Resources", Email = "facilisis.lorem.tristique@hotmail.ca", Age = 52 },
                        new Passenger{ Name = "Vivien Sanchez", Job = "Human Resources", Email = "mauris@icloud.ca", Age = 51 }
                    };
                    context.Passengers.AddRange(passengers);
                    context.SaveChanges();
                }

                if (!context.Bookings.Any())
                {
                    var bookings = new Booking[]
                    {
                            new Booking { FlightID = 1123, PassengerID = 175 },
                            new Booking { FlightID = 1125, PassengerID = 174 },
                            new Booking { FlightID = 1122, PassengerID = 121 },
                            new Booking { FlightID = 1124, PassengerID = 134 },
                            new Booking { FlightID = 1123, PassengerID = 150 },
                            new Booking { FlightID = 1123, PassengerID = 193 },
                            new Booking { FlightID = 1125, PassengerID = 192 },
                            new Booking { FlightID = 1122, PassengerID = 202 },
                            new Booking { FlightID = 1125, PassengerID = 147 },
                            new Booking { FlightID = 1122, PassengerID = 180 },
                            new Booking { FlightID = 1123, PassengerID = 140 },
                            new Booking { FlightID = 1124, PassengerID = 122 },
                            new Booking { FlightID = 1122, PassengerID = 115 },
                            new Booking { FlightID = 1123, PassengerID = 133 },
                            new Booking { FlightID = 1122, PassengerID = 199 },
                            new Booking { FlightID = 1123, PassengerID = 209 },
                            new Booking { FlightID = 1124, PassengerID = 208 },
                            new Booking { FlightID = 1122, PassengerID = 130 },
                            new Booking { FlightID = 1123, PassengerID = 145 },
                            new Booking { FlightID = 1125, PassengerID = 129 },
                            new Booking { FlightID = 1126, PassengerID = 203 },
                            new Booking { FlightID = 1124, PassengerID = 203 },
                            new Booking { FlightID = 1124, PassengerID = 126 },
                            new Booking { FlightID = 1125, PassengerID = 203 },
                            new Booking { FlightID = 1126, PassengerID = 184 },
                            new Booking { FlightID = 1124, PassengerID = 194 },
                            new Booking { FlightID = 1124, PassengerID = 172 },
                            new Booking { FlightID = 1122, PassengerID = 203 },
                            new Booking { FlightID = 1122, PassengerID = 183 },
                            new Booking { FlightID = 1123, PassengerID = 174 },
                            new Booking { FlightID = 1125, PassengerID = 153 },
                            new Booking { FlightID = 1124, PassengerID = 121 },
                            new Booking { FlightID = 1122, PassengerID = 196 },
                            new Booking { FlightID = 1125, PassengerID = 175 },
                            new Booking { FlightID = 1126, PassengerID = 166 },
                            new Booking { FlightID = 1125, PassengerID = 176 },
                            new Booking { FlightID = 1125, PassengerID = 127 },
                            new Booking { FlightID = 1125, PassengerID = 130 },
                            new Booking { FlightID = 1125, PassengerID = 160 },
                            new Booking { FlightID = 1125, PassengerID = 173 },
                            new Booking { FlightID = 1125, PassengerID = 202 },
                            new Booking { FlightID = 1125, PassengerID = 123 },
                            new Booking { FlightID = 1122, PassengerID = 136 },
                            new Booking { FlightID = 1125, PassengerID = 136 },
                            new Booking { FlightID = 1124, PassengerID = 204 },
                            new Booking { FlightID = 1122, PassengerID = 191 },
                            new Booking { FlightID = 1126, PassengerID = 141 },
                            new Booking { FlightID = 1125, PassengerID = 161 },
                            new Booking { FlightID = 1123, PassengerID = 130 },
                            new Booking { FlightID = 1122, PassengerID = 153 },
                            new Booking { FlightID = 1123, PassengerID = 180 },
                            new Booking { FlightID = 1126, PassengerID = 208 },
                            new Booking { FlightID = 1125, PassengerID = 145 },
                            new Booking { FlightID = 1126, PassengerID = 186 },
                            new Booking { FlightID = 1124, PassengerID = 201 },
                            new Booking { FlightID = 1122, PassengerID = 193 },
                            new Booking { FlightID = 1125, PassengerID = 157 },
                            new Booking { FlightID = 1126, PassengerID = 137 },
                            new Booking { FlightID = 1124, PassengerID = 171 },
                            new Booking { FlightID = 1122, PassengerID = 125 },
                            new Booking { FlightID = 1125, PassengerID = 114 },
                            new Booking { FlightID = 1125, PassengerID = 166 },
                            new Booking { FlightID = 1123, PassengerID = 152 },
                            new Booking { FlightID = 1122, PassengerID = 139 },
                            new Booking { FlightID = 1124, PassengerID = 186 },
                            new Booking { FlightID = 1122, PassengerID = 200 },
                            new Booking { FlightID = 1126, PassengerID = 147 },
                            new Booking { FlightID = 1123, PassengerID = 113 },
                            new Booking { FlightID = 1126, PassengerID = 172 },
                            new Booking { FlightID = 1124, PassengerID = 170 },
                            new Booking { FlightID = 1124, PassengerID = 125 },
                            new Booking { FlightID = 1126, PassengerID = 145 },
                            new Booking { FlightID = 1123, PassengerID = 177 },
                            new Booking { FlightID = 1125, PassengerID = 141 },
                            new Booking { FlightID = 1124, PassengerID = 133 },
                            new Booking { FlightID = 1126, PassengerID = 200 },
                            new Booking { FlightID = 1125, PassengerID = 191 },
                            new Booking { FlightID = 1125, PassengerID = 179 },
                            new Booking { FlightID = 1123, PassengerID = 124 },
                            new Booking { FlightID = 1124, PassengerID = 192 },
                            new Booking { FlightID = 1126, PassengerID = 207 },
                            new Booking { FlightID = 1125, PassengerID = 167 },
                            new Booking { FlightID = 1122, PassengerID = 192 },
                            new Booking { FlightID = 1122, PassengerID = 188 },
                            new Booking { FlightID = 1124, PassengerID = 151 },
                            new Booking { FlightID = 1124, PassengerID = 163 }
                    };
                    context.Bookings.AddRange(bookings);
                    context.SaveChanges();
                }
            }
        }
    }
}
